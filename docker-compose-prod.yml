services:
  api:
    image: scrapper-backend:latest
    container_name: scrapper-api-prod
    ports:
      - '127.0.0.1:5001:5001'
    env_file:
      - .env
    volumes:
      # Persist scraper artifacts from container to host
      - ./artifacts:/app/artifacts
    # In production we do not mount the source tree
    restart: unless-stopped
    shm_size: '1gb'
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

  scheduler:
    image: scrapper-backend:latest
    container_name: scrapper-scheduler-prod
    command: ['python', 'run_scheduler.py']
    env_file:
      - .env
    volumes:
      - ./artifacts:/app/artifacts
      - ./sitemap_data:/app/sitemap_data
    restart: unless-stopped
    shm_size: '1gb'
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

  db:
    image: postgres:17.6-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: db
      TZ: 'Asia/Manila'
    volumes:
      - postgres17-data:/var/lib/postgresql/data
    shm_size: 1gb

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - '127.0.0.1:8888:8080'
    environment:
      ADMINER_PLUGINS: 'tables-filter tinymce'
      ADMINER_DESIGN: 'price'

volumes:
  postgres17-data:
